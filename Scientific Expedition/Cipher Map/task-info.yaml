type: checkiO
files:
- name: mission.py
  visible: true
  text: |
    from typing import List

    def recall_password(grille: List[str], password: List[str]) -> str:
        # your code here
        return None


    if __name__ == '__main__':
        print("Example:")
        print(recall_password(['X...', '..X.', 'X..X', '....'],
     ['itdf', 'gdce', 'aton', 'qrdi']))

        # These "asserts" are used for self-checking and not for an auto-testing
        assert recall_password(['X...', '..X.', 'X..X', '....'],
     ['itdf', 'gdce', 'aton', 'qrdi']) == 'icantforgetiddqd'
        assert recall_password(['....', 'X..X', '.X..', '...X'],
     ['xhwc', 'rsqx', 'xqzz', 'fyzr']) == 'rxqrwsfzxqxzhczy'
        print("Coding complete? Click 'Check' to earn cool rewards!")
  learner_created: false
status: Unchecked
code: |
  from typing import List

  def recall_password(grille: List[str], password: List[str]) -> str:
      # your code here
      return None


  if __name__ == '__main__':
      print("Example:")
      print(recall_password(['X...', '..X.', 'X..X', '....'],
   ['itdf', 'gdce', 'aton', 'qrdi']))

      # These "asserts" are used for self-checking and not for an auto-testing
      assert recall_password(['X...', '..X.', 'X..X', '....'],
   ['itdf', 'gdce', 'aton', 'qrdi']) == 'icantforgetiddqd'
      assert recall_password(['....', 'X..X', '.X..', '...X'],
   ['xhwc', 'rsqx', 'xqzz', 'fyzr']) == 'rxqrwsfzxqxzhczy'
      print("Coding complete? Click 'Check' to earn cool rewards!")
seconds_from_change: 9223372036854775807
